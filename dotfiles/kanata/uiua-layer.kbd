;; Good source: https://shom.dev/start/using-kanata-to-remap-any-keyboard/

(defsrc
  grv                   1    2    3    4    5    6    7    8    9    0    -    =
  esc                   q    w    e    r    t    y    u    i    o    p    [    ] 
  caps                  a    s    d    f    g    h    j    k    l    ;    '    \    
  lshift  IntlBackslash z    x    c    v    b    n    m    ,    .    /
                                                                        rctrl
)

(defalias
  ;; tap for esc, hold for lctl
  cap (tap-hold 200 200 esc lctl)

  ua             (layer-while-held uiua-layer)
  ua-shift       (layer-while-held uiua-layer-shifted)

  g-gap          (unicode ◌)
  g-id           (unicode ∘)

  g-not          (unicode ¬)
  g-sign         (unicode ±)
  g-negate       (unicode X)
  g-abs          (unicode ⌵)
  g-sqrt         (unicode √)
  g-sine         (unicode ∿)
  g-floor        (unicode ⌊)
  g-ceil         (unicode ⌈)
  g-round        (unicode ⁅)
  g-eq           (unicode =)
  g-neq          (unicode ≠)
  g-lt           (unicode <)
  g-lte          (unicode ≤)
  g-gt           (unicode >)
  g-gte          (unicode ≥)
  g-add          (unicode +)
  g-sub          (unicode -)
  g-mul          (unicode ×)
  g-div          (unicode ÷)
  g-mod          (unicode ◿)
  g-pow          (unicode ⁿ)
  g-log          (unicode ₙ)
  g-min          (unicode ↧)
  g-max          (unicode ↥)
  g-atan         (unicode ∠)
  g-complex      (unicode ℂ)
  g-length       (unicode ⧻)
  g-shape        (unicode △)
  g-range        (unicode ⇡)
  g-first        (unicode ⊢)
  g-last         (unicode ⊣)
  g-reverse      (unicode ⇌)
  g-deshape      (unicode ♭)
  g-fix          (unicode ¤)
  g-bits         (unicode ⋯)
  g-transpose    (unicode ⍉)
  g-sort         (unicode ⍆)
  g-rise         (unicode ⍏)
  g-fall         (unicode ⍖)
  g-where        (unicode ⊚)
  g-classify     (unicode ⊛)
  g-dedup        (unicode ◴)
  g-unique       (unicode ◰)
  g-box          (unicode □)
  g-match        (unicode ≍)
  g-couple       (unicode ⊟)
  g-join         (unicode ⊂)
  g-select       (unicode ⊏)
  g-pick         (unicode ⊡)
  g-reshape      (unicode ↯)
  g-rot          (unicode ↻)
  g-keep         (unicode ▽)
  g-find         (unicode ⌕)
  g-mask         (unicode ⦷)
  g-memberof     (unicode ∊)
  g-indexof      (unicode ⊗)

  g-reduce       (unicode /)
  g-fold         (unicode ∧)
  g-scan         (unicode \)


  g-under        (unicode ⍜)
  g-windows      (unicode ◫)
  g-each         (unicode ∵)
  g-rows         (unicode ≡)
  g-inv          (unicode ⍚)
  g-take         (unicode ↙)
  g-drop         (unicode ↘)
  g-obverse      (unicode ⌅)
  g-on           (unicode X)
  g-by           (unicode ⊸)
  g-partition    (unicode ⊜)
  g-pop          (unicode ⋅)
  g-or           (unicode ∨)
  g-table        (unicode ⊞)
  g-integral     (unicode ∫)
  g-parse        (unicode ⋕)
)


(deflayer qwerty
  grv                   1    2    3    4    5    6    7    8    9    0    -    =
  esc                   q    w    e    r    t    y    u    i    o    p    [    ] 
  @cap                  a    s    d    f    g    h    j    k    l    ;    '    \    
  lshift  IntlBackslash z    x    c    v    b    n    m    ,    .    /
                                                                        @ua
                                                                  
)


(deflayer uiua-layer
  XX           ;; grv
  XX           ;; 1
  XX           ;; 2
  XX           ;; 3
  XX           ;; 4
  XX           ;; 5
  XX           ;; 6
  XX           ;; 7
  XX           ;; 8
  XX           ;; 9
  XX           ;; 0
  XX           ;; -
  XX           ;; =
  XX           ;; esc
  XX           ;; q
  @g-windows   ;; w
  @g-each      ;; e
  XX           ;; r
  XX           ;; t
  @g-rise      ;; y
  @g-under     ;; u
  @g-id        ;; i
  @g-on        ;; o
  @g-partition ;; p
  XX           ;; ` ([)
  XX           ;; + (])
  XX           ;; caps
  XX           ;; a
  XX           ;; s
  XX           ;; d
  XX           ;; f
  @g-gap       ;; g
  XX           ;; h
  XX           ;; j
  XX           ;; k
  XX           ;; l
  XX           ;; ñ (;)
  XX           ;; '
  XX           ;; ç (\)
  @ua-shift    ;; l-shift
  @g-lte       ;; <
  @g-sort      ;; z
  @g-rise      ;; x
  @g-fall      ;; c
  @g-or        ;; v
  XX           ;; b
  XX           ;; n
  XX           ;; m
  XX           ;; ,
  XX           ;; .
  XX           ;; - (/)
  rctrl
)

(deflayer uiua-layer-shifted
  XX           ;; grv
  XX           ;; 1
  XX           ;; 2
  XX           ;; 3
  XX           ;; 4
  XX           ;; 5
  XX           ;; 6
  XX           ;; 7
  XX           ;; 8
  XX           ;; 9
  XX           ;; 0
  XX           ;; -
  XX           ;; =
  XX           ;; esc
  XX           ;; q
  XX           ;; w
  @g-table     ;; e
  @g-inv       ;; r
  XX           ;; t
  XX           ;; y
  @g-obverse   ;; u
  @g-integral  ;; i
  @g-by        ;; o
  @g-parse     ;; p
  XX           ;; ` ([)
  XX           ;; + (])
  XX           ;; caps
  XX           ;; a
  XX           ;; s
  XX           ;; d
  XX           ;; f
  @g-pop       ;; g
  XX           ;; h
  XX           ;; j
  XX           ;; k
  XX           ;; l
  XX           ;; ñ (;)
  XX           ;; '
  XX           ;; ç (\)
  XX           ;; lshift
  @g-gte       ;; <
  @g-round     ;; z
  @g-ceil      ;; x
  @g-floor     ;; c
  XX           ;; v
  XX           ;; b
  XX           ;; n
  XX           ;; m
  XX           ;; ,
  XX           ;; .
  XX           ;; - (/)
  rctrl
)
