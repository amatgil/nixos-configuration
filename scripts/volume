#!/usr/bin/env lua

function run_cmd(cmd)
   local handle = io.popen(cmd)
   local x = handle:read("*a");
   handle:close()
   return x
end

function current_vol () 
   local cmd = "bc <<< \"100*$(wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk '{print $2}')\""
   local vol = run_cmd(cmd)

   local standard = string.sub(string.gsub(vol, "\n", ""), 1, -4)
   local formatted
   if is_muted() then
       formatted = "Vol: <b>" .. "MM" .. "%</b>"
   elseif tonumber(vol) <= 4 then
       formatted = "Vol: <b>" .. "--" .. "%</b>"
   else 
      formatted = "Vol: <b>" .. standard .. "%</b>"
   end

   print(formatted)
   return vol
end 
			

function inc_vol () 
   local cmd = "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.05+"
   if tonumber(current_vol()) <= 95 then run_cmd(cmd); end
end

function dec_vol () 
   local cmd = "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.05-"
   if tonumber(current_vol()) >= 5 then run_cmd(cmd); end
end

function toggle_mute () 
   --local h = io.popen("amixer set Master 1+ toggle")
   local cmd = "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"
   run_cmd(cmd)
end

function is_muted()
   local cmd = "wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk '{print $3}'"
   local r = run_cmd(cmd)
   return string.match(r, "MUTED")
end

function arg_error() 
   print("VOL: ERROR d'ARG")
end
		

local n = arg[1]

local calling_table = {
   ["curr"] = current_vol,
   ["inc"] = inc_vol,
   ["dec"] = dec_vol,
   ["togglemute"] = toggle_mute
}

(calling_table[n] or arg_error)()

